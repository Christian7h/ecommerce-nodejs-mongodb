---

// Generar rutas estáticas para cada categoría
export async function getStaticPaths() {
  try {
    const response = await fetch("https://nodejs-eshop-api-course-2c70.onrender.com/api/v1/categories");
    if (!response.ok) {
      throw new Error("Error al obtener categorías");
    }
    const categories = await response.json();
    return categories.map((category) => ({
      params: { id: category._id.toString() },
    }));
  } catch (error) {
    console.error("Error en getStaticPaths para categorías:", error);
    return [];
  }
}

// Cargar productos de cada categoría en el servidor
export async function getStaticProps({ params }) {
  try {
    const response = await fetch(
      `https://nodejs-eshop-api-course-2c70.onrender.com/api/v1/products?categories=${params.id}`
    );

    if (!response.ok) throw new Error("Error al obtener productos");

    const products = await response.json();

    return { props: { products } };
  } catch (error) {
    console.error("Error en getStaticProps:", error);
    return { props: { products: [] } };
  }
}

import Layout from "../../../layouts/Layout.astro";
import CategoryProducts from "../../../components/store/CategoryProducts.jsx";

const { id } = Astro.params;
---
<Layout>
  <div class="container mx-auto p-8">
    <h1 class="text-4xl font-bold text-valorant mb-8">Productos de la Categoría</h1>
    <CategoryProducts client:load categoryId={id} />
  </div>
</Layout>
